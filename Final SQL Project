-- In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. --

-- Which customer has spent the most money on invoices? 
SELECT customers.customerid, customers.firstname, customers.lastname, SUM(invoices.total) AS Total_Spent
FROM customers
INNER JOIN invoices
ON customers.customerid = invoices.customerid
GROUP BY customers.CustomerId
ORDER BY Total_Spent desc
LIMIT 1;

-- Show customers (their full names, customer ID, and country) who are not in the US
SELECT firstname, lastname, customerid, country
FROM customers
WHERE country != "USA";

-- Show only customers from Brazil
SELECT firstname, lastname, customerid, country
FROM customers
WHERE country = "Brazil";

-- Find the invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.firstname, customers.lastname, invoices.invoiceid, invoices.invoicedate, invoices.BillingCountry
FROM customers
INNER JOIN invoices ON customers.customerid = invoices.customerid
WHERE customers.country = "Brazil";

-- Show the Employees who are Sales Agents.
SELECT employeeid, firstname, lastname, title
FROM employees
WHERE title LIKE "%Agent";

-- Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT billingcountry
FROM invoices;

-- Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT employees.employeeid, employees.firstname, employees.lastname, invoices.InvoiceId
FROM employees
INNER JOIN customers ON employees.EmployeeId = customers.SupportRepId
INNER JOIN invoices ON customers.customerid = invoices.customerid;

-- Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT invoices.InvoiceId, invoices.Total, customers.firstname, customers.lastname, customers.Country, employees.FirstName, employees.LastName
FROM invoices
INNER JOIN customers ON invoices.CustomerId = customers.CustomerId
INNER JOIN employees ON customers.SupportRepId = employees.EmployeeId
ORDER BY invoices.invoiceid;

-- How many invoices were there in 2009?
SELECT COUNT(*) AS Total_Invoices
FROM invoices
WHERE invoicedate LIKE "2009%"

-- What are the total sales for 2009?
SELECT SUM(total) AS Total_Sales
FROM invoices
WHERE invoicedate LIKE "2009%";

-- Write a query that includes the purchased track name with each invoice line ID.
SELECT invoicelineID, name
FROM invoice_items
INNER JOIN tracks ON invoice_items.TrackId = tracks.TrackId
ORDER BY invoicelineid;

-- Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT invoicelineID, tracks.name AS Track_Name, artists.name AS Artist_Name
FROM invoice_items
INNER JOIN tracks ON invoice_items.TrackId = tracks.TrackId
INNER JOIN albums ON tracks.AlbumId = albums.AlbumId
INNER JOIN artists ON albums.artistid = artists.ArtistId
ORDER BY invoicelineid;

-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT trackid, tracks.name, albums.title, media_types.name AS Media_Type, genres.name AS Genre
FROM tracks
LEFT JOIN albums ON tracks.albumid = albums.AlbumId
LEFT JOIN media_types ON tracks.MediaTypeId = media_types.MediaTypeId
LEFT JOIN genres ON tracks.GenreId = genres.GenreId;

-- Show the total sales made by each sales agent.
SELECT employees.employeeid, employees.firstname, employees.lastname, SUM(invoices.total) AS Total_Sales
FROM employees
INNER JOIN customers ON employees.employeeID = customers.SupportRepId
INNER JOIN invoices ON customers.CustomerId = invoices.CustomerId
GROUP BY employees.EmployeeId;

-- Which sales agent made the most dollars in sales in 2009?
SELECT employees.employeeid, employees.firstname, employees.lastname, SUM(invoices.total) AS Total_Sales
FROM employees
INNER JOIN customers ON employees.employeeID = customers.SupportRepId
INNER JOIN invoices ON customers.CustomerId = invoices.CustomerId
WHERE invoices.invoicedate LIKE "2009%"
GROUP BY employees.EmployeeId
ORDER BY Total_Sales desc
LIMIT 1;
